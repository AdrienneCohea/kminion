---
name: Build Docker image
on:
  push:
    tags:
      - '*'
    branches:
      - "master"
    paths-ignore:
      - 'charts/**'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_SM_READONLY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SM_READONLY_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: get secrets from aws sm
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,sdlc/prod/github/dockerhub_token
          parse-json-secrets: true
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:v0.10.3,network=host
      - name: Set Release Date
        run: |
          echo "BUILT_AT=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            vectorized/kminion
            redpandadata/kminion
          # generate Docker tags based on the following events/attributes
          # Semver type is only active on 'push tag' events,
          # hence no enable condition required
          tags: |
            type=sha,prefix={{branch}}-,format=short,enable={{is_default_branch}}
            type=semver,pattern={{raw}}
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: vectorizedbot
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          provenance: false
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            VERSION=${{ fromJSON(steps.docker_meta.outputs.json).labels['org.opencontainers.image.version'] }}
            BUILT_AT=${{ env.BUILT_AT }}
            COMMIT=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
